<?xml version="1.0" encoding="utf-8" ?>
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svidget="http://www.svidget.org/svidget"
		 width="400" height="400" viewBox="0 0 400 400" class="root has-leaf state-none">
	<title>Nest Thermostat Widget</title>
	<desc>
		A Nest thermostat widget.
		Simulates a Nest thermostat, you can drag the dial to set the thermostat.
		This widget was developed by Joe Agster for svidget.io and is licensed under the Creative Commons Attribution 4.0 License.
		This widget is based on a Codepen by Dal Hundal: https://codepen.io/dalhundal/pen/KpabZB
		Nest frame image copyright Google/Nest.
	</desc>

	<svidget:params>
		<svidget:param name="targetTemp" shortname="target" type="number" coerce="true" description="The target temperature." onset="handleDataParamSet" />
		<svidget:param name="ambientTemp" shortname="amb" type="number" coerce="true" description="The ambient temperature." onset="handleDataParamSet" />
		<svidget:param name="unit" type="string" subtype="choice" typedata="F|C" defvalue="F" description="The temperature unit. Either 'F' or 'C'. (default: 'F')" onset="handleDataParamSet" />
		<svidget:param name="state" type="string" subtype="choice" typedata="off|heating|cooling" description="The state of the thermostat, one of: 'off', 'heating', 'cooling'. (default: 'off')" onset="handleDataParamSet" />
		<svidget:param name="showLeaf" shortname="leaf" type="boolean" coerce="true" defvalue="true" description="Whether to show the leaf indicator." onset="handleLeafParamSet" />
		<svidget:param name="awayMode" shortname="away" type="boolean" coerce="true" defvalue="false" description="Whether the thermostat is in away mode." onset="handleDataParamSet" />
	</svidget:params>

	<svidget:actions>
	</svidget:actions>

	<svidget:events>
		<svidget:event name="targetTempBeginChange" description="Triggered when the user starts dragging the dial to change the target temperature." />
		<svidget:event name="targetTempEndChange" description="Triggered when the user ends dragging the dial to change the target temperature." />
		<svidget:event name="targetTempChanged" description="Triggered when the user drags the dial to change the target temperature." />
	</svidget:events>

	<style>
		<![CDATA[
			@import url(https://fonts.googleapis.com/css?family=Open+Sans:300);

			/* background */
			
			.background .back {
				-webkit-transition: fill 0.5s;
				transition: fill 0.5s;
			}
			.background .editableIndicator {
				fill: white;
				fill-rule: evenodd;
				opacity: 0;
				-webkit-transition: opacity 0.5s;
				transition: opacity 0.5s;
			}
			.root.state-off .back {
				fill: #222;
			}
			.root.state-heating .back {
				fill: #ed4a0f;
			}
			.root.state-cooling .back {
				fill: #1e55a5;
			}
			.root.dragging .editableIndicator {
				opacity: 1;
			}
			
			
			/* leaf */
			
			.leaf {
				fill: #13EB13;
				opacity: 0;
				-webkit-transition: opacity 0.5s;
				transition: opacity 0.5s;
				pointer-events: none;
			}
			.root.has-leaf .leaf {
				display: block;
				opacity: 1;
				pointer-events: initial;
			}


			/* ticks */
			
			.ticks path {
				fill: rgba(255, 255, 255, 0.3);
			}
			.ticks path.active {
				fill: rgba(255, 255, 255, 0.8);
			}
			.ticks path.tick-target, .ticks path.tick-ambient {
				fill: #fff;
			}
			path.tick-target {
				cursor: pointer;
			}
			
			/* labels */
			
			.root text {
				fill: white;
				text-anchor: middle;
				font-family: Helvetica, sans-serif;
				alignment-baseline: central;
			}
			.label-target {
				font-size: 120px;
				font-weight: bold;
			}
			.label-target-half {
				font-size: 40px;
				font-weight: bold;
				opacity: 0;
				-webkit-transition: opacity 0.1s;
				transition: opacity 0.1s;
			}
			.label-target-half.shown {
				opacity: 1;
				-webkit-transition: opacity 0s;
				transition: opacity 0s;
			}
			.label-ambient {
				font-size: 22px;
				font-weight: bold;
			}
			.label-away {
				font-size: 72px;
				font-weight: bold;
				opacity: 0;
				pointer-events: none;
			}
			.label-state {
				font-size: 20px;
			}
			
			.root.away .leaf {
				visibility: hidden;
			}
			.root.away .label-target, 
			.root.away .label-target-half,
			.root.away .label-state,
			.root.away .tick-target { 
				visibility: hidden;
			}
			.root.away .label-away {
				opacity: 1;
			}
			
			image { pointer-events: none; }

		]]>
	</style>

	<g transform="matrix(0.66, 0, 0, 0.66, 69.4, 69.5)">
		<g class="background">
			<circle cx="200" cy="200" r="200" class="back"></circle>
			<path class="editableIndicator" d="M 200,200 m -196,0 a 196,196 0 1,0 392,0 a 196,196 0 1,0 -392,0 z M 200,200 m -192,0 a 192,192 0 1,0 384,0 a 192,192 0 1,0 -384,0 z"></path>
		</g>

		<g class="ticks">
			<path d="M196 13.333333333333343 L204 13.333333333333343 L203 75 L197 75 Z" class="tick-target" transform="rotate(-150 200 200)" />
			<path d="M196 13.333333333333343 L204 13.333333333333343 L203 50 L197 50 Z" class="tick-ambient" transform="rotate(104 200 200)" />
			<g id="tickmarks" data-comment="150 ticks, 2 degrees apart">
				<path d="M107.53269207045112 362.15807537309524 L105.80064126288225 361.15807537309524 L124.13397459621558 329.4038105676658 L125.86602540378445 330.4038105676658Z" class="active"></path>
				<path d="M101.92978543929152 358.832230546766 L100.23368924697866 357.7723920182996 L119.66406226886284 326.6772951592307 L121.3601584611757 327.7371336876971Z" class="active"></path>
				<path d="M96.44636225801563 355.3128731137452 L94.78828711290555 354.1944873068037 L115.29202690683293 323.7964429797855 L116.950102051943 324.91482878672696Z" class="active"></path>
				<path d="M91.08910323311328 351.6042908689493 L89.47106924436339 350.4287203643644 L111.02319516175407 320.76476390394964 L112.64122915050396 321.94033440853457Z" class="active"></path>
				<path d="M85.86453535948382 347.7110021485804 L84.28851385227037 346.4796791979291 L106.86276794754451 317.58595156568265 L108.43878945475797 318.81727451633395Z" class="active"></path>
				<path d="M80.77902396829828 343.63775032522904 L79.24693508206033 342.35217510585596 L102.81581410390011 314.2638788581602 L104.34790299013805 315.54945407753326Z" class="active"></path>
				<path d="M75.83876497182385 339.38949802880575 L74.35247532086905 338.051236816088 L98.88726422069385 310.8025932152502 L100.37355387164865 312.14085442796795Z" class="active"></path>
				<path d="M71.0497773146592 334.97142110034054 L69.6110977139819 333.5821043594226 L95.08190463081178 307.2063116803387 L96.52058423148907 308.5956284212567Z" class="active"></path>
				<path d="M66.4178956405774 330.3889022860181 L65.02857889965941 328.9502226853408 L91.4043715787433 303.4794157685109 L92.79368831966129 304.9180953691882Z" class="active"></path>
				<path d="M61.94876318391195 325.6475246791309 L60.610501971194225 324.1612350281761 L87.859145572032 299.62644612835135 L89.19740678474973 301.11273577930615Z" class="active"></path>
				<path d="M57.64782489414398 320.75306491793964 L56.36224967477091 319.2209760317017 L84.45054592246676 295.6520970098619 L85.73612114183983 297.18418589609985Z" class="active"></path>
				<path d="M53.52032080207087 315.7114861477296 L52.288997851419566 314.13546464051615 L81.18272548366605 291.56121054524203 L82.41404843431735 293.1372320524555Z" class="active"></path>
				<path d="M49.57127963563562 310.52893075563657 L48.395709131050694 308.9108967668867 L78.0596655914654 287.358770849496 L79.23523609605036 288.9768048382459Z" class="active"></path>
				<path d="M45.805512693196306 305.2117128870944 L44.687126886254816 303.55363774198435 L75.085171213273 283.049897948057 L76.20355702021449 284.707973093167Z" class="active"></path>
				<path d="M42.227607981700345 299.76631075302134 L41.167769453233944 298.07021456070845 L72.26286631230289 278.63984153882427 L73.32270484076929 280.33593773113716Z" class="active"></path>
				<path d="M38.841924626904785 294.19935873711773 L37.841924626904785 292.46730792954884 L69.5961894323342 274.1339745962155 L70.5961894323342 275.8660254037844Z" class="active"></path>
				<path d="M35.65258756245282 288.5176393128918 L34.713644436881054 286.751744127174 L67.08838950837506 269.5377868250247 L68.02733263394683 271.3036820107425Z" class="active"></path>
				<path d="M32.66348250427794 282.7280747802603 L31.786740210699776 280.930486687662 L64.74252190833587 264.8568779720624 L65.61926420191404 266.6544660646608Z" class="active"></path>
				<path d="M29.87825121645696 276.83771883179196 L29.064777930305382 275.01062791650673 L62.56144471053406 260.09695100372744 L63.37491799668564 261.9240419190126Z" class="active"></path>
				<path d="M27.300287074282267 270.8537479588704 L26.551073887450457 268.99938024973676 L60.54781522156597 255.26380515782003 L61.29702840839778 257.1181728669536Z" class="active"></path>
				<path d="M24.932730929956108 264.78345270824406 L24.24869064330477 262.90406746667225 L58.70408673878808 250.3633288780644 L59.38812702543942 252.24271411963622Z" class="active"></path>
				<path d="M22.778467285946277 258.63422879961865 L22.160433297196363 256.73211576702835 L57.032505561352 245.40149263994695 L57.65053955010191 247.30360567253726Z" class="active"></path>
				<path d="M20.840120780664137 252.41356811511147 L20.288846069030143 250.49104472323484 L55.53510825343517 240.38434167661154 L56.08638296506916 242.30686506848818Z" class="active"></path>
				<path d="M19.120052990746984 246.1290495715473 L18.636209199547665 244.18845811899533 L54.21371916300086 235.31798861367417 L54.69756295420018 237.25858006622616Z" class="active"></path>
				<path d="M17.6203595538407 239.7883298867155 L17.204536172205195 237.8320346852479 L53.069948199111394 230.20860602193005 L53.4857715807469 232.1649012233977Z" class="active"></path>
				<path d="M16.342867615388116 233.3991342508392 L15.995571260054248 231.42951874481477 L52.10518887050188 225.06241889702733 L52.452485225835744 227.03203440305174Z" class="active"></path>
				<path d="M15.28913360253361 226.96924691462044 L15.010787400613452 224.9887107771373 L51.32061658780438 219.88569707526824 L51.59896278972454 221.86623321275138Z" class="active"></path>
				<path d="M14.460441327856643 220.50650170533024 L14.251384401321332 218.51745791459368 L50.71718723149132 214.68474759477974 L50.926244158026634 216.67379138551627Z" class="active"></path>
				<path d="M13.857800425243624 214.01877248249656 L13.718287477755382 212.0236443819769 L50.29563598728225 209.46590701135898 L50.435148934770496 211.46103511187863Z" class="active"></path>
				<path d="M13.481945119804635 207.51396354481923 L13.41214612639962 205.51518189078104 L50.05647645043314 204.235533678356 L50.12627544383815 206.2343153323942Z" class="active"></path>
				<path d="M13.333333333333343 201 L13.333333333333343 199 L50 199 L50 201Z" class="active"></path>
				<path d="M13.41214612639962 194.4848181092189 L13.481945119804635 192.4860364551807 L50.12627544383815 193.76568466760574 L50.05647645043314 195.76446632164394Z" class="active"></path>
				<path d="M13.718287477755382 187.97635561802306 L13.857800425243624 185.9812275175034 L50.435148934770496 188.53896488812137 L50.29563598728225 190.534092988641Z" class="active"></path>
				<path d="M14.251384401321332 181.4825420854063 L14.460441327856643 179.49349829466973 L50.92624415802666 183.3262086144837 L50.71718723149135 185.31525240522026Z" class="active"></path>
				<path d="M15.01078740061348 175.01128922286264 L15.289133602533639 173.0307530853795 L51.59896278972454 178.1337667872486 L51.32061658780438 180.1143029247317Z" class="active"></path>
				<path d="M15.995571260054248 168.5704812551852 L16.342867615388116 166.6008657491608 L52.452485225835744 172.96796559694823 L52.10518887050188 174.93758110297264Z" class="active"></path>
				<path d="M17.204536172205223 162.16796531475205 L17.62035955384073 160.21167011328444 L53.48577158074693 167.83509877660228 L53.06994819911142 169.7913939780699Z" class="active"></path>
				<path d="M18.636209199547665 155.81154188100464 L19.120052990746984 153.87095042845266 L54.69756295420018 162.7414199337738 L54.21371916300086 164.68201138632583Z" class="active"></path>
				<path d="M20.288846069030143 149.50895527676514 L20.840120780664137 147.5864318848885 L56.08638296506916 157.6931349315118 L55.53510825343517 159.61565832338846Z" class="active"></path>
				<path d="M22.16043329719639 143.26788423297162 L22.778467285946306 141.36577120038132 L57.65053955010194 152.6963943274627 L57.032505561352025 154.59850736005302Z" class="active"></path>
				<path d="M24.248690643304798 137.09593253332773 L24.932730929956136 135.21654729175592 L59.38812702543942 147.75728588036378 L58.70408673878808 149.6366711219356Z" class="active"></path>
				<path d="M26.551073887450457 131.00061975026324 L27.300287074282267 129.14625204112963 L61.29702840839778 142.88182713304641 L60.54781522156597 144.73619484218Z" class="active"></path>
				<path d="M29.064777930305382 124.98937208349324 L29.87825121645696 123.16228116820804 L63.37491799668567 138.07595808098736 L62.56144471053409 139.90304899627256Z" class="active"></path>
				<path d="M31.786740210699747 119.06951331233805 L32.66348250427791 117.2719252197397 L65.61926420191404 133.3455339353392 L64.74252190833587 135.14312202793755Z" class="active"></path>
				<path d="M34.71364443688111 113.24825587282596 L35.65258756245288 111.48236068710811 L68.02733263394686 128.69631798925747 L67.08838950837509 130.46221317497532Z" class="active"></path>
				<path d="M37.84192462690481 107.53269207045109 L38.84192462690481 105.80064126288222 L70.5961894323342 124.13397459621555 L69.5961894323342 125.86602540378442Z" class="active"></path>
				<path d="M41.167769453233944 101.92978543929152 L42.227607981700345 100.23368924697866 L73.32270484076929 119.66406226886284 L72.26286631230289 121.3601584611757Z" class="active"></path>
				<path d="M44.687126886254816 96.44636225801564 L45.805512693196306 94.78828711290556 L76.20355702021449 115.29202690683294 L75.085171213273 116.95010205194302Z" class="active"></path>
				<path d="M48.395709131050694 91.08910323311329 L49.57127963563562 89.4710692443634 L79.23523609605036 111.02319516175409 L78.0596655914654 112.64122915050397Z" class="active"></path>
				<path d="M52.288997851419566 85.86453535948385 L53.52032080207087 84.2885138522704 L82.41404843431735 106.86276794754453 L81.18272548366605 108.43878945475798Z" class="active"></path>
				<path d="M56.36224967477091 80.77902396829829 L57.64782489414398 79.24693508206035 L85.73612114183983 102.81581410390012 L84.45054592246676 104.34790299013807Z" class="active"></path>
				<path d="M60.610501971194225 75.83876497182386 L61.94876318391195 74.35247532086906 L89.19740678474973 98.88726422069387 L87.859145572032 100.37355387164867Z" class="active"></path>
				<path d="M65.02857889965946 71.04977731465914 L66.41789564057746 69.61109771398185 L92.79368831966133 95.08190463081175 L91.40437157874334 96.52058423148904Z" class="active"></path>
				<path d="M69.61109771398188 66.41789564057746 L71.04977731465917 65.02857889965946 L96.52058423148905 91.40437157874332 L95.08190463081176 92.79368831966131Z" class="active"></path>
				<path d="M74.35247532086906 61.94876318391195 L75.83876497182386 60.610501971194225 L100.37355387164867 87.859145572032 L98.88726422069387 89.19740678474973Z" class="active"></path>
				<path d="M79.24693508206038 57.64782489414398 L80.77902396829832 56.36224967477091 L104.34790299013808 84.45054592246676 L102.81581410390014 85.73612114183983Z" class="active"></path>
				<path d="M84.28851385227041 53.52032080207087 L85.86453535948387 52.288997851419566 L108.438789454758 81.18272548366605 L106.86276794754454 82.41404843431735Z" class="active"></path>
				<path d="M89.4710692443634 49.57127963563562 L91.08910323311329 48.395709131050694 L112.64122915050397 78.0596655914654 L111.02319516175409 79.23523609605036Z" class="active"></path>
				<path d="M94.78828711290555 45.805512693196306 L96.44636225801563 44.687126886254816 L116.950102051943 75.08517121327301 L115.29202690683293 76.2035570202145Z" class="active"></path>
				<path d="M100.23368924697866 42.22760798170037 L101.92978543929152 41.16776945323397 L121.3601584611757 72.2628663123029 L119.66406226886284 73.3227048407693Z" class="active"></path>
				<path d="M105.80064126288225 38.841924626904785 L107.53269207045112 37.841924626904785 L125.86602540378445 69.5961894323342 L124.13397459621558 70.5961894323342Z" class="active"></path>
				<path d="M111.48236068710813 35.65258756245285 L113.24825587282598 34.71364443688108 L130.46221317497532 67.08838950837506 L128.69631798925747 68.02733263394683Z" class="active"></path>
				<path d="M117.27192521973971 32.66348250427791 L119.06951331233806 31.786740210699747 L135.14312202793758 64.74252190833587 L133.34553393533923 65.61926420191404Z" class="active"></path>
				<path d="M123.16228116820804 29.87825121645696 L124.98937208349324 29.064777930305382 L139.90304899627256 62.56144471053409 L138.0759580809874 63.37491799668567Z" class="active"></path>
				<path d="M129.14625204112963 27.300287074282267 L131.00061975026324 26.551073887450457 L144.73619484218 60.54781522156597 L142.88182713304641 61.29702840839778Z" class="active"></path>
				<path d="M135.21654729175594 24.932730929956108 L137.09593253332775 24.24869064330477 L149.6366711219356 58.70408673878808 L147.75728588036378 59.38812702543942Z" class="active"></path>
				<path d="M141.36577120038135 22.778467285946306 L143.26788423297165 22.16043329719639 L154.59850736005305 57.032505561352025 L152.69639432746274 57.65053955010194Z" class="active"></path>
				<path d="M147.5864318848885 20.840120780664137 L149.50895527676514 20.288846069030143 L159.61565832338846 55.53510825343517 L157.6931349315118 56.08638296506916Z" class="active"></path>
				<path d="M153.8709504284527 19.120052990746984 L155.8115418810047 18.636209199547665 L164.68201138632583 54.21371916300086 L162.74141993377384 54.69756295420018Z" class="active"></path>
				<path d="M160.21167011328447 17.6203595538407 L162.16796531475205 17.204536172205195 L169.79139397806992 53.069948199111394 L167.8350987766023 53.4857715807469Z" class="active"></path>
				<path d="M166.6008657491608 16.342867615388116 L168.57048125518523 15.995571260054248 L174.93758110297267 52.10518887050188 L172.96796559694823 52.452485225835744Z" class="active"></path>
				<path d="M173.03075308537956 15.28913360253361 L175.0112892228627 15.010787400613452 L180.11430292473176 51.32061658780438 L178.13376678724862 51.59896278972454Z" class="active"></path>
				<path d="M179.49349829466973 14.460441327856643 L181.4825420854063 14.251384401321332 L185.31525240522026 50.71718723149135 L183.3262086144837 50.92624415802666Z" class="active"></path>
				<path d="M185.98122751750344 13.857800425243624 L187.9763556180231 13.718287477755382 L190.53409298864102 50.29563598728225 L188.53896488812137 50.435148934770496Z" class="active"></path>
				<path d="M192.48603645518074 13.481945119804635 L194.4848181092189 13.41214612639962 L195.76446632164394 50.05647645043314 L193.76568466760577 50.12627544383815Z" class="active"></path>
				<path d="M199 13.333333333333343 L201 13.333333333333343 L201 50 L199 50Z" class="active"></path>
				<path d="M205.5151818907811 13.41214612639962 L207.51396354481926 13.481945119804635 L206.23431533239423 50.12627544383815 L204.23553367835606 50.05647645043314Z" class="active"></path>
				<path d="M212.0236443819769 13.718287477755382 L214.01877248249656 13.857800425243624 L211.46103511187863 50.435148934770496 L209.46590701135898 50.29563598728225Z" class="active"></path>
				<path d="M218.5174579145937 14.251384401321332 L220.50650170533027 14.460441327856643 L216.6737913855163 50.92624415802666 L214.68474759477974 50.71718723149135Z" class="active"></path>
				<path d="M224.9887107771373 15.010787400613452 L226.96924691462044 15.28913360253361 L221.86623321275138 51.59896278972454 L219.88569707526824 51.32061658780438Z" class="active"></path>
				<path d="M231.42951874481477 15.995571260054248 L233.3991342508392 16.342867615388116 L227.03203440305177 52.452485225835744 L225.06241889702733 52.10518887050188Z" class="active"></path>
				<path d="M237.83203468524795 17.204536172205195 L239.78832988671553 17.6203595538407 L232.1649012233977 53.4857715807469 L230.20860602193008 53.069948199111394Z" class="active"></path>
				<path d="M244.1884581189953 18.636209199547665 L246.1290495715473 19.120052990746984 L237.25858006622616 54.69756295420018 L235.31798861367417 54.21371916300086Z" class="active"></path>
				<path d="M250.49104472323486 20.288846069030143 L252.4135681151115 20.840120780664137 L242.3068650684882 56.08638296506916 L240.38434167661154 55.53510825343517Z" class="active"></path>
				<path d="M256.73211576702835 22.16043329719639 L258.63422879961865 22.778467285946306 L247.30360567253726 57.65053955010194 L245.40149263994695 57.032505561352025Z" class="active"></path>
				<path d="M262.90406746667225 24.24869064330477 L264.78345270824406 24.932730929956108 L252.24271411963622 59.38812702543942 L250.3633288780644 58.70408673878808Z" class="active"></path>
				<path d="M268.99938024973676 26.551073887450457 L270.8537479588704 27.300287074282267 L257.1181728669536 61.29702840839778 L255.26380515782 60.54781522156597Z" class="active"></path>
				<path d="M275.0106279165068 29.064777930305382 L276.83771883179196 29.87825121645696 L261.9240419190126 63.37491799668567 L260.09695100372744 62.56144471053409Z" class="active"></path>
				<path d="M280.9304866876619 31.786740210699747 L282.7280747802603 32.66348250427791 L266.65446606466077 65.61926420191404 L264.8568779720624 64.74252190833587Z" class="active"></path>
				<path d="M286.751744127174 34.71364443688108 L288.5176393128919 35.65258756245285 L271.30368201074253 68.02733263394683 L269.5377868250247 67.08838950837506Z" class="active"></path>
				<path d="M292.4673079295489 37.841924626904785 L294.19935873711773 38.841924626904785 L275.8660254037844 70.5961894323342 L274.1339745962156 69.5961894323342Z" class="active"></path>
				<path d="M298.07021456070845 41.16776945323397 L299.76631075302134 42.22760798170037 L280.33593773113716 73.3227048407693 L278.63984153882427 72.2628663123029Z" class="active"></path>
				<path d="M303.5536377419844 44.687126886254816 L305.21171288709445 45.805512693196306 L284.7079730931671 76.2035570202145 L283.049897948057 75.08517121327301Z" class="active"></path>
				<path d="M308.9108967668867 48.395709131050694 L310.52893075563657 49.57127963563562 L288.9768048382459 79.23523609605036 L287.358770849496 78.0596655914654Z" class="active"></path>
				<path d="M314.13546464051615 52.288997851419566 L315.7114861477296 53.52032080207087 L293.1372320524555 82.41404843431735 L291.56121054524203 81.18272548366605Z" class="active"></path>
				<path d="M319.2209760317017 56.36224967477091 L320.75306491793964 57.64782489414398 L297.18418589609985 85.73612114183983 L295.6520970098619 84.45054592246676Z" class="active"></path>
				<path d="M324.1612350281761 60.610501971194225 L325.6475246791309 61.94876318391195 L301.11273577930615 89.19740678474973 L299.62644612835135 87.859145572032Z" class="active"></path>
				<path d="M328.9502226853408 65.02857889965946 L330.38890228601815 66.41789564057746 L304.9180953691882 92.79368831966131 L303.47941576851093 91.40437157874332Z" class="active"></path>
				<path d="M333.58210435942254 69.61109771398185 L334.97142110034054 71.04977731465914 L308.59562842125666 96.52058423148904 L307.2063116803387 95.08190463081175Z" class="active"></path>
				<path d="M338.051236816088 74.35247532086906 L339.38949802880575 75.83876497182386 L312.140854427968 100.37355387164867 L310.8025932152503 98.88726422069387Z" class="active"></path>
				<path d="M342.352175105856 79.24693508206035 L343.6377503252291 80.77902396829829 L315.54945407753326 104.34790299013807 L314.2638788581602 102.81581410390012Z" class="active"></path>
				<path d="M346.47967919792916 84.2885138522704 L347.7110021485804 85.86453535948385 L318.81727451633395 108.43878945475798 L317.58595156568265 106.86276794754453Z" class="active"></path>
				<path d="M350.4287203643644 89.4710692443634 L351.6042908689493 91.08910323311329 L321.94033440853457 112.64122915050397 L320.76476390394964 111.02319516175409Z" class="active"></path>
				<path d="M354.1944873068037 94.78828711290556 L355.3128731137452 96.44636225801564 L324.914828786727 116.95010205194302 L323.7964429797855 115.29202690683294Z" class="active"></path>
				<path d="M357.7723920182997 100.23368924697866 L358.832230546766 101.92978543929152 L327.7371336876971 121.3601584611757 L326.6772951592307 119.66406226886284Z" class="active"></path>
				<path d="M361.1580753730952 105.80064126288222 L362.1580753730952 107.53269207045109 L330.4038105676658 125.86602540378442 L329.4038105676658 124.13397459621555Z" class="active"></path>
				<path d="M364.3474124375471 111.48236068710811 L365.2863555631189 113.24825587282596 L332.9116104916249 130.46221317497532 L331.97266736605314 128.69631798925747Z" class="active"></path>
				<path d="M367.3365174957221 117.2719252197397 L368.21325978930025 119.06951331233805 L335.2574780916641 135.14312202793755 L334.380735798086 133.3455339353392Z" class="active"></path>
				<path d="M370.121748783543 123.16228116820804 L370.93522206969465 124.98937208349324 L337.4385552894659 139.90304899627256 L336.62508200331433 138.07595808098736Z" class="active"></path>
				<path d="M372.69971292571773 129.14625204112963 L373.44892611254954 131.00061975026324 L339.452184778434 144.73619484218 L338.70297159160225 142.88182713304641Z" class="active"></path>
				<path d="M375.06726907004384 135.21654729175592 L375.7513093566952 137.09593253332773 L341.2959132612119 149.6366711219356 L340.6118729745606 147.75728588036378Z" class="active"></path>
				<path d="M377.2215327140537 141.36577120038132 L377.8395667028036 143.26788423297162 L342.967494438648 154.59850736005302 L342.34946044989806 152.6963943274627Z" class="active"></path>
				<path d="M379.15987921933583 147.5864318848885 L379.7111539309699 149.50895527676514 L344.46489174656483 159.61565832338846 L343.91361703493084 157.6931349315118Z" class="active"></path>
				<path d="M380.879947009253 153.87095042845266 L381.3637908004523 155.81154188100464 L345.78628083699914 164.68201138632583 L345.3024370457998 162.7414199337738Z" class="active"></path>
				<path d="M382.37964044615927 160.21167011328444 L382.7954638277948 162.16796531475205 L346.9300518008886 169.7913939780699 L346.5142284192531 167.83509877660228Z" class="active"></path>
				<path d="M383.6571323846119 166.6008657491608 L384.00442873994575 168.5704812551852 L347.8948111294981 174.93758110297264 L347.54751477416426 172.96796559694823Z" class="active"></path>
				<path d="M384.71086639746636 173.0307530853795 L384.9892125993865 175.01128922286264 L348.67938341219565 180.1143029247317 L348.4010372102755 178.1337667872486Z" class="active"></path>
				<path d="M385.53955867214336 179.49349829466973 L385.74861559867867 181.4825420854063 L349.2828127685086 185.31525240522026 L349.07375584197337 183.3262086144837Z" class="active"></path>
				<path d="M386.1421995747564 185.9812275175034 L386.2817125222446 187.97635561802306 L349.70436401271775 190.534092988641 L349.5648510652295 188.53896488812137Z" class="active"></path>
				<path d="M386.51805488019534 192.4860364551807 L386.58785387360035 194.4848181092189 L349.94352354956686 195.76446632164394 L349.87372455616185 193.76568466760574Z" class="active"></path>
				<path d="M386.66666666666663 199 L386.66666666666663 201 L350 201 L350 199Z" class="active"></path>
				<path d="M386.58785387360035 205.51518189078104 L386.51805488019534 207.51396354481923 L349.87372455616185 206.2343153323942 L349.94352354956686 204.235533678356Z" class="active"></path>
				<path d="M386.2817125222446 212.0236443819769 L386.1421995747564 214.01877248249656 L349.5648510652295 211.46103511187863 L349.70436401271775 209.46590701135898Z" class="active"></path>
				<path d="M385.74861559867867 218.51745791459368 L385.53955867214336 220.50650170533024 L349.07375584197337 216.67379138551627 L349.2828127685087 214.68474759477974Z" class="active"></path>
				<path d="M384.9892125993865 224.9887107771373 L384.71086639746636 226.96924691462044 L348.4010372102755 221.86623321275138 L348.67938341219565 219.88569707526824Z" class="active"></path>
				<path d="M384.00442873994575 231.42951874481477 L383.6571323846119 233.3991342508392 L347.54751477416426 227.03203440305174 L347.8948111294981 225.06241889702733Z" class="active"></path>
				<path d="M382.79546382779483 237.8320346852479 L382.3796404461593 239.7883298867155 L346.5142284192531 232.1649012233977 L346.9300518008886 230.20860602193005Z" class="active"></path>
				<path d="M381.3637908004523 244.18845811899533 L380.879947009253 246.1290495715473 L345.3024370457998 237.25858006622616 L345.78628083699914 235.31798861367417Z" class="active"></path>
				<path d="M379.7111539309699 250.49104472323484 L379.15987921933583 252.41356811511147 L343.91361703493084 242.30686506848818 L344.46489174656483 240.38434167661154Z" class=""></path>
				<path d="M377.8395667028036 256.73211576702835 L377.22153271405375 258.63422879961865 L342.34946044989806 247.30360567253726 L342.96749443864803 245.40149263994695Z" class=""></path>
				<path d="M375.75130935669523 262.90406746667225 L375.0672690700439 264.78345270824406 L340.6118729745606 252.24271411963622 L341.2959132612119 250.3633288780644Z" class=""></path>
				<path d="M373.44892611254954 268.99938024973676 L372.69971292571773 270.8537479588704 L338.70297159160225 257.1181728669536 L339.452184778434 255.26380515782003Z" class=""></path>
				<path d="M370.93522206969465 275.01062791650673 L370.121748783543 276.83771883179196 L336.62508200331433 261.9240419190126 L337.43855528946597 260.09695100372744Z" class=""></path>
				<path d="M368.2132597893002 280.930486687662 L367.3365174957221 282.7280747802603 L334.380735798086 266.6544660646608 L335.2574780916641 264.8568779720624Z" class=""></path>
				<path d="M365.28635556311895 286.751744127174 L364.3474124375472 288.5176393128918 L331.9726673660532 271.3036820107425 L332.91161049162497 269.5377868250247Z" class=""></path>
				<path d="M362.15807537309524 292.46730792954884 L361.15807537309524 294.19935873711773 L329.4038105676658 275.8660254037844 L330.4038105676658 274.1339745962155Z" class=""></path>
				<path d="M358.832230546766 298.07021456070845 L357.7723920182997 299.76631075302134 L326.6772951592307 280.33593773113716 L327.7371336876971 278.63984153882427Z" class=""></path>
				<path d="M355.3128731137452 303.55363774198435 L354.1944873068037 305.2117128870944 L323.7964429797855 284.707973093167 L324.914828786727 283.049897948057Z" class=""></path>
				<path d="M351.6042908689493 308.9108967668867 L350.4287203643644 310.52893075563657 L320.76476390394964 288.9768048382459 L321.94033440853457 287.358770849496Z" class=""></path>
				<path d="M347.7110021485804 314.13546464051615 L346.47967919792916 315.7114861477296 L317.58595156568265 293.1372320524555 L318.81727451633395 291.56121054524203Z" class=""></path>
				<path d="M343.6377503252291 319.2209760317017 L342.352175105856 320.75306491793964 L314.2638788581602 297.18418589609985 L315.54945407753326 295.6520970098619Z" class=""></path>
				<path d="M339.38949802880575 324.1612350281761 L338.051236816088 325.6475246791309 L310.8025932152503 301.11273577930615 L312.140854427968 299.62644612835135Z" class=""></path>
				<path d="M334.9714211003406 328.9502226853408 L333.5821043594226 330.3889022860181 L307.20631168033873 304.9180953691882 L308.5956284212567 303.4794157685109Z" class=""></path>
				<path d="M330.3889022860181 333.5821043594226 L328.9502226853408 334.97142110034054 L303.47941576851093 308.5956284212567 L304.9180953691882 307.2063116803387Z" class=""></path>
				<path d="M325.6475246791309 338.051236816088 L324.1612350281762 339.38949802880575 L299.62644612835135 312.14085442796795 L301.11273577930615 310.8025932152502Z" class=""></path>
				<path d="M320.7530649179397 342.35217510585596 L319.22097603170175 343.63775032522904 L295.65209700986196 315.54945407753326 L297.1841858960999 314.2638788581602Z" class=""></path>
				<path d="M315.7114861477296 346.4796791979291 L314.13546464051615 347.7110021485804 L291.56121054524203 318.81727451633395 L293.1372320524555 317.58595156568265Z" class=""></path>
				<path d="M310.5289307556366 350.4287203643644 L308.9108967668867 351.6042908689493 L287.35877084949607 321.94033440853457 L288.9768048382459 320.76476390394964Z" class=""></path>
				<path d="M305.21171288709445 354.1944873068037 L303.5536377419844 355.3128731137452 L283.049897948057 324.91482878672696 L284.7079730931671 323.7964429797855Z" class=""></path>
				<path d="M299.76631075302134 357.7723920182996 L298.07021456070845 358.832230546766 L278.63984153882427 327.7371336876971 L280.33593773113716 326.6772951592307Z" class=""></path>
			</g>
		</g>

		<g class="labels">
			<text x="200" y="130" class="label-state"></text>
			<text x="200" y="200" class="label-target"></text>
			<text x="280" y="175" class="label-target-half"></text>
			<text x="136.94122344165476" y="356.07594885207584" class="label-ambient"></text>
			<text x="200" y="200" class="label-away">AWAY</text>
		</g>

		<path class="leaf" d="M 1.2000000000000002 33.6 c 9.600000000000001 6.800000000000001 20.400000000000002 7.2 29.200000000000003 -2.4000000000000004 C 40 20.8 40 8.8 40 1.6 c -5.2 6 -14.8 3.6 -28 7.6000000000000005 C 1.6 12.8 0 25.200000000000003 0 30.400000000000002 c 2.4000000000000004 -2.8000000000000003 7.2 -6.800000000000001 13.200000000000001 -9.200000000000001 9.600000000000001 -3.6 13.600000000000001 -3.6 19.200000000000003 -8 -3.6 4 -8 6.4 -17.2 9.600000000000001 C 8.8 25.200000000000003 3.2 31.200000000000003 1.2000000000000002 33.6 z" transform="translate(180,300)"></path>

	</g>

	<script type="application/javascript" xlink:href="../javascripts/svidget.min.js"></script>
	<script type="application/javascript">
		<![CDATA[
	
		// constants
		var CENTER_X = 200;
		var CENTER_Y = 200;
		var TEMP_INFO = {
			"F": {
				min: 60, max: 90
			},
			"C": {
				min: 10, max: 30
			}
		}
		// range: -150 to 150 (2 degree increments)
		var MIN_ANGLE = -150;
		var MAX_ANGLE = 150;
		var ANGLE_RANGE = MAX_ANGLE - MIN_ANGLE;
		var ANGLE_STEP = 2;
		var OUTER_RADIUS = (CENTER_X * 2) / 30;
		var INNER_RADIUS = (CENTER_X * 2) / 8;
		var AMB_POSITION = [CENTER_X, OUTER_RADIUS - (OUTER_RADIUS - INNER_RADIUS) / 2]
		
		// param variables
		var params = {}; // internal store of params

		// general variables
		var _loaded = false;
		var rootElement;
		var currentUnit;
		
		
		/* Initialization */
		
		// entry point
		function init() {
			//debugger;
			console.log('[nest-thermometer] init');
			// init stuff
			initUI();
			initEvents();
			initParams();
			draw();

			_loaded = true;
		}
		
		function initParams() {
			loadParams();
		}
		
		function initUI() {
			rootElement = getByClass("root");
		}
		
		function initEvents() {
			rootElement.addEventListener('mousedown', dragStart);
			rootElement.addEventListener('touchstart', dragStart);
			rootElement.addEventListener('mouseup', dragEnd);
			rootElement.addEventListener('mouseleave', dragEnd);
			rootElement.addEventListener('touchend', dragEnd);
			rootElement.addEventListener('mousemove', dragMove);
			rootElement.addEventListener('touchmove', dragMove);
		}
		
		
		/* Param Loading */
		
		function loadParams() {
			//debugger;
			var widget = svidget.$;
			loadDataParams(widget);
			loadLeafParams(widget);
		}
		
		function loadDataParams(widget) {
			params.unit = widget.param("unit").value();
			params.targetTemp = sanitizeTempValue(widget.param("targetTemp").value(), params.unit);
			params.ambientTemp = sanitizeTempValue(widget.param("ambientTemp").value(), params.unit);
			params.state = widget.param("state").value();
			params.awayMode = widget.param("awayMode").value();
			currentUnit = TEMP_INFO[params.unit];
		}
		
		function loadLeafParams(widget) {
			params.showLeaf = widget.param("showLeaf").value();
		}
		
		
		// Widget Events
		
		function handleDataParamSet(e) {
			//debugger;
			if (!_loaded) return;
			var widget = svidget.$;
			loadDataParams(widget);
			// redraw widget
			draw();
		}
		
		function handleLeafParamSet(e) {
			//debugger;
			if (!_loaded) return;
			loadLeafParams(svidget.$);
			// show/hide leaf
			setClass(rootElement, "has-leaf", params.showLeaf);
		}

		function triggerTargetTempChangeBegin() {
			svidget.$.event("targetTempBeginChange").trigger();
		}

		function triggerTargetTempChangeEnd() {
			svidget.$.event("targetTempEndChange").trigger();
		}
		
		function triggerTargetTempChanged() {
			svidget.$.event("targetTempChanged").trigger({ targetTemp: params.targetTemp });
		}


		// Sanitizers
		
		function sanitizeTempValue(temp, unit) {
			temp = temp || 0;
			if (currentUnit == null) return temp;
			// return number in range for C or F
			return rangify(temp, currentUnit.min, currentUnit.max);
		}


		// Draw Functions
		
		function draw() {
			if (params.awayMode) {
				drawAwayMode();
			}
			else {
				drawTempMode();
			}
		}
		
		function drawAwayMode() {
			console.log('[nest-thermometer] drawing away mode');
			// set label to Away
			//setText(getByClass("label-target"), "AWAY");
			// remove setpoint range
			updateTicks();
			// reset state
			drawState();
			// hide controls for away mode
			setClass(rootElement, "away", params.awayMode);
		}
		
		function drawTempMode() {
			console.log('[nest-thermometer] drawing temp mode');
			// show controls
			setClass(rootElement, "away", false);
			// draw ticks
			drawTempRange();
			drawAmbientTemp();
			// set state
			drawState();
			// show/hide leaf
			setClass(rootElement, "has-leaf", params.showLeaf);
		}
		
		function drawTempRange() {
			updateTempRange();
		}
		
		function drawState() {
			var stateEle = getByClass("label-state");
			// reset state
			setClass(rootElement, "state-off", false);
			setClass(rootElement, "state-cooling", false);
			setClass(rootElement, "state-heating", false);
			// set background color
			if (params.state == "cooling" || params.state == "heating") {
				var className = "state-" + params.state;
				setClass(rootElement, className, true);
			}
			else {
				setClass(rootElement, "state-off", true);
			}
			// update label
			updateStateLabel(stateEle);
		}
		
		function drawAmbientTemp() {
			var ambEle = getByClass("label-ambient");
			var temp = roundHalf(params.ambientTemp);
			// set ambient label
			var label = Math.floor(temp) + "";
			if (temp % 1 != 0) {
				label += '⁵';
			}
			ambEle.textContent = label;
			// position ambient label
			var peggedValue = rangify(temp, currentUnit.min, currentUnit.max);
			var deg = tempDegree(peggedValue); // ANGLE_RANGE * ((peggedValue - currentUnit.min) / ANGLE_RANGE) - OFFSET_ANGLE;			
			deg += (peggedValue > params.targetTemp) ? 8 : -8;
			var pos = rotatePoint(AMB_POSITION, deg, [CENTER_X, CENTER_Y]);
			setAttrs(ambEle, { x: pos[0], y: pos[1]	});
		}
		
		function updateTempRange() {
			// set target tick
			var targetDeg = tempDegree(params.targetTemp);
			getByClass("tick-target").setAttribute("transform", rotateCenterString(targetDeg));
			// set ambient tick
			var ambDeg = tempDegree(params.ambientTemp);
			getByClass("tick-ambient").setAttribute("transform", rotateCenterString(ambDeg));
			// update ticks to active/not-active
			updateTicks();
			// update temp label
			updateTempLabel(params.targetTemp);
		}
		
		function updateTempLabel(val) {
			val = roundHalf(val);
			var whole = Math.floor(val);
			setText(getByClass("label-target"), whole); 
			var half = (val * 2) % 2 == 1 ? "5" : "";
			var halfEle = getByClass("label-target-half");
			setText(halfEle, half); 
			setClass(halfEle, "shown", half == "5");			
		}
		
		function updateStateLabel(ele) {
			ele = ele || getByClass("label-state");
			if (showStateLabel() && (params.state == "cooling" || params.state == "heating")) {
				setText(ele, params.state.toUpperCase());
			}
			else {
				setText(ele, ""); 
			}
		}
	
		// sets the ticks to active/inactive according to range between target and ambient temps
		function updateTicks() {
			var ticksEle = document.getElementById("tickmarks");
			var tickCount = ticksEle.children.length;
			var index0 = tempTickIndex(params.targetTemp, tickCount);
			var index1 = tempTickIndex(params.ambientTemp, tickCount);
			var min = Math.min(index0, index1);
			var ticksEle = document.getElementById("tickmarks");
			for (var i=0; i<tickCount; i++) {
				var outside = params.awayMode || (i < index0 && i < index1) || (i > index0 && i > index1);
				setClass(ticksEle.children[i], "active", !outside);
			}
		}
		
		// Whether to show state label, i.e. ambient temp higher than target while cooling
		function showStateLabel() {
			return !params.awayMode && (params.state == "cooling" && params.ambientTemp > params.targetTemp) || (params.state == "heating" && params.ambientTemp < params.targetTemp);
		}
	
	
		// Helpers
		
		// Restrict a number to a min + max range
		function rangify(val, min, max) {
			if (val < min) return min;
			if (val > max) return max;
			return val;
		}
	
		// Round a number to the nearest 0.5
		function roundHalf(num) {
			return Math.round(num * 2) / 2;
		}
		
		function rotateCenterString(deg) {
			return "rotate(" + deg + " " + CENTER_X + " " + CENTER_Y + ")";
		}
		
		function tempDegree(temp) {
			if (currentUnit == null) return 0;
			temp = roundHalf(temp);
			temp = rangify(temp, currentUnit.min, currentUnit.max);
			var pct = (temp - currentUnit.min) / (currentUnit.max - currentUnit.min);
			var deg = (pct * ANGLE_RANGE) + MIN_ANGLE;
			return deg;
		}
		
		function degreeTemp(deg) {
			if (currentUnit == null) return 0;
			var pct = (deg - MIN_ANGLE) / ANGLE_RANGE;
			var temp = (pct * (currentUnit.max - currentUnit.min)) + currentUnit.min;
			return temp;
		}
		
		// given the temp, gets the index of the tick (0-tickCount) that it corresponds to)
		function tempTickIndex(temp, tickCount) {
			var deg = tempDegree(temp); // -150 to 150
			var index = (Math.round(deg - MIN_ANGLE) / ANGLE_RANGE) * tickCount; // tickCount == 150
			index = rangify(index, 0, tickCount);
			return index;
		}
		
		// Rotate a Cartesian point about given origin by X degrees
		function rotatePoint(point, angle, origin) {
			var radians = angle * Math.PI / 180;
			var x = point[0] - origin[0];
			var y = point[1] - origin[1];
			var x1 = x * Math.cos(radians) - y * Math.sin(radians) + origin[0];
			var y1 = x * Math.sin(radians) + y * Math.cos(radians) + origin[1];
			return [x1, y1];
		}
		
		function degreeAtPoint(point) {
			var x = point[0];
			var y = point[1];
			var ax = x - CENTER_X;
			var ay = CENTER_Y - y;
			var rad = Math.atan2(ay, ax);
			var deg = rad * 180 / Math.PI;
			var adjdeg = -(deg - 90);
			adjdeg = adjdeg > 180 ? adjdeg - 360 : adjdeg;
			// rangify degree
			adjdeg = rangify(adjdeg, MIN_ANGLE, MAX_ANGLE);
			return adjdeg;
		}
	
		function setClass(ele, className, state) {
			ele.classList[state ? 'add' : 'remove'](className);
		}
		
		function setText(ele, text) {
			ele.textContent = text || "";
		}
		
		// Set attributes for an element
		function setAttrs(ele, attrs) {
			for (var i in attrs) {
				ele.setAttribute(i, attrs[i]);
			}
		}
		
		function getByClass(className) {
			var eles = document.getElementsByClassName(className);
			if (eles.length > 0) return eles[0];
			return null;
		}
		
		
		// Drag Events
		
		// Drag to control
		var _drag = {
			inProgress: false,
			startPoint: null,
			startTemperature: 0,
			lockAxis: undefined
		};
		var startDelay;
		var dragLockAxisDistance = 15;
		
		function dragStart(e) {
			if (params.awayMode) return;
			console.log('[nest-thermometer] drag start');
			startDelay = setTimeout(function() {
				setClass(rootElement, 'dragging', true);
				_drag.inProgress = true;
				_drag.startPoint = eventPosition(e);
				_drag.startTemp = params.targetTemp || currentUnit.minValue;
				_drag.currentTemp = null;
				_drag.lockAxis = undefined;
				triggerTargetTempChangeBegin();
			}, 100);
		};
		
		function dragEnd(e) {
			console.log('[nest-thermometer] drag end');
			clearTimeout(startDelay);
			setClass(rootElement, 'dragging', false);
			if (!_drag.inProgress) return;
			_drag.inProgress = false;
			triggerTargetTempChangeEnd();
		};
		
		function dragMove(e) {
			if (!_drag.inProgress) return;
			if (params.awayMode) {
				dragEnd(e); 
				return;
			}
			e.preventDefault();
			var pos = eventPosition(e);
			var deg = degreeAtPoint(pos);
			//console.log('[nest-thermometer] drag degree: ' + deg);
			var temp = degreeTemp(deg);
			params.targetTemp = roundHalf(temp);
			var changed = params.targetTemp != _drag.currentTemp;
			_drag.currentTemp = params.targetTemp;
			// update ticks (if temp changed)
			if (changed) {
				// set target tick
				var targetDeg = tempDegree(params.targetTemp);
				getByClass("tick-target").setAttribute("transform", rotateCenterString(targetDeg));
				// update temp label
				updateTempLabel(params.targetTemp);
				// update state label
				updateStateLabel();
				// update tick highlighting
				updateTicks();
				// trigger changed event
				triggerTargetTempChanged();
			}
		}
		
		function eventPosition(e) {
			if (e.targetTouches && e.targetTouches.length) {
				return [e.targetTouches[0].clientX, e.targetTouches[0].clientY];
			} 
			else {
				return [e.x, e.y];
			}
		}
		


		// Global Events

		window.addEventListener('load', init, false);

		
	  ]]>
	</script>
</svg>